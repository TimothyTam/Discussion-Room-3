1 - multipleRelationship_1
procedure p,q;
Select boolean such that Calls(p,"moreMoney") and Modifies(p,"cusion") such that Calls*(p,q)
false
5000
2 - multipleRelationship_2
procedure p,q;
Select p.procName such that Calls(p,"moreMoney") and Modifies(p,"cushion") such that Calls*(p,q) and Uses(p,"rug")
Gain
5000
3 - multipleRelationship_3
assign a;
Select a such that Modifies(a,"cushion") such that Uses(a,"cushion")
13,31
5000
4 - multipleRelationship_4
assign a; while w; if if1;
Select a such that Modifies(a,"cushion") and Parent(w,a) and Parent*(if1,a)
13,31
5000
5 - multipleRelationship_5
assign a; while w;
Select a such that Follows(a,w) and Parent*(a,w)
none
5000
6 - multipleRelationship_6
while w,w1; if if1;
Select <w,if1> such that Follows*(w,if1) and Parent*(w,w1)
7 21, 56 65
5000
7 - multipleRelationship_7
while w; if if1; call c;
Select if1 such that Follows*(if1,w) and Next*(if1,c)
21
5000
8 - multipleRelationship_8
assign a1; while w; if if1;
Select <if1,a1,w> such that Next*(if1,a1) and Affects(a1,a1) and Parent(w,a1)
10 13 12, 21 24 23,10 24 23,28 24 23,10 31 30,21 31 30,28 31 30, 10 46 44,21 46 44,28 46 44,41 46 44, 58 61 60, 77 79 78,80 79 78, 77 91 90,87 91 90
5000
9 - multipleRelationship_9
assign a;
Select a such that Affects*(a,a) and Modifies(a,"chair") and Uses(a,"stool")
24
5000
10 - multipleRelationship_10
while w; if if1; stmt s; assign a;
Select if1 such that Next*(if1,s) and Parent*(a,w)
none
5000
11 - everything_1
if if1; assign a;
Select if1 such that Next*(if1,a) pattern a(_,_"cushion"_)
10,21,28
5000
12 - everything_2
call call; assign a; if if1;
Select <a,if1,call> such that Modifies(a,"wallet") and Next*(if1,a) and Parent*(if1,call) with call.procName = "moreMoney" pattern if1("work",_,_)
68 65 66
5000
13 - everything_3
while w; assign a;
Select <a,w> pattern a(_,_"cushion"_) and w("carpet",_) such that Parent*(w,a)
11 7, 13 12,31 30
5000
14 - everything_4
variable v; while w; procedure p; assign a;
Select v such that Uses(p,v) and Modifies(p,v) pattern w(v,_) and a("more",_) such that Parent*(w,a) with p.procName = "moreMoney"
steal, work
5000
15 - everything_5
assign a1,a2,a; constant c;
Select a such that Affects(a1,a2) with a.stmt# = c.value
1,2,3,4,11
5000
16 - everything_6
assign a1,a2;
Select boolean pattern a1(_,_"cushion"_) and a2(_,_"1*2"_) such that Next*(a1,a2) and Next*(a2,a1)
false
5000
17 - everything_7
stmt s; assign a; variable v;
Select s pattern a(v,_) with v.varName = "buy" such that Uses(s,v) with s.stmt# = a.stmt#
43
5000
18 - everything_8
while w; call call; if1;
Select call.procName such that Parent*(s,call) and Follows*(call,s) with s.stmt# = if1.stmt#
none
5000
19 - everything_9
variable v; assign a;
Select <a,v> such that Uses(a,v) pattern a(v,_)
13 cushion,24 chair,27 furry,31 cushion, 43 buy,46 man,50 savings,59 wallet,61 wallet,79 more, 84 jail,89 more, 91 more
5000
20 - everything_10
while w; assign a; variable v; if if1;
Select if1 such that Uses(a,v) pattern a(v,_)
10,21,28,41,47,58,65,70,77,80,87
5000
